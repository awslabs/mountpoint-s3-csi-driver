name: Performance Tests

on:
  push:
    branches: [ "main", "bench" ]
    paths:
      - 'tests/**'
      - 'pkg/**'
      - 'cmd/**'
      - 'charts/**'
      - '.github/workflows/**'
      - 'Dockerfile'

concurrency: performance-cluster
env:
  AWS_REGION : "us-east-1"
  COMMIT_ID: ${{ github.sha }}
  TMP_IMAGE_NAME: "s3-csi-driver-tmp"
  BENCHMARK_RESULTS_PATH: "s3://mountpoint-s3-csi-driver-benchmark/benchmark-data.json"
  BENCHMARK_RESULTS_REGION: "us-east-1"
  CLUSTER_NAME: "s3-csi-cluster-perf.k8s.local"
jobs:
  build:
    # this is to prevent the job to run at forked projects
    if: github.repository == 'awslabs/mountpoint-s3-csi-driver'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up crane
        uses: imjasonh/setup-crane@v0.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::239424963615:role/S3CSIDriverE2ETestsRole
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR Private Repository
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: ${{ env.TMP_IMAGE_NAME }}
        run: |
          export PLATFORM=linux/amd64,linux/arm64
          export TAG="${{ env.COMMIT_ID  }}-perf"
          make -j `nproc` all-push
      - name: Install tools
        run: |
          export ACTION=install_tools
          tests/e2e-kubernetes/scripts/run.sh
      - name: Create cluster
        run: |
          export ACTION=create_cluster
          export AWS_REGION=${{ env.AWS_REGION }}
          export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
          tests/e2e-kubernetes/scripts/run.sh
      - name: Update kubeconfig
        run: |
          export ACTION=update_kubeconfig
          export AWS_REGION=${{ env.AWS_REGION }}
          export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
          tests/e2e-kubernetes/scripts/run.sh
      - name: Install the driver
        run: |
          export ACTION=install_driver
          export AWS_REGION=${{ env.AWS_REGION }}
          export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
          export IMAGE_NAME=${{ env.TMP_IMAGE_NAME }}
          export TAG="${{ env.COMMIT_ID  }}-perf"
          tests/e2e-kubernetes/scripts/run.sh
      - name: Run Performance Tests
        run: |
          export ACTION=run_perf
          export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
          export AWS_REGION=${{ env.AWS_REGION }}
          export TAG=${{ env.COMMIT_ID }}
          tests/e2e-kubernetes/scripts/run.sh
      - name: Download previous benchmark results
        run: |
          aws s3 cp --region ${{ env.BENCHMARK_RESULTS_REGION }} ${{ env.BENCHMARK_RESULTS_PATH }} benchmark-data.json || true
      - name: Update benchmark result file
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'customBiggerIsBetter'
          output-file-path: tests/e2e-kubernetes/csi-test-artifacts/output.json
          alert-threshold: "200%"
          fail-on-alert: true
          external-data-json-path: benchmark-data.json
          max-items-in-chart: 20
      - name: Store benchmark result
        run: |
          aws s3 cp --region ${{ env.BENCHMARK_RESULTS_REGION }} benchmark-data.json ${{ env.BENCHMARK_RESULTS_PATH }}
      - name: Post e2e cleanup
        if: always()
        run: |
          export ACTION=e2e_cleanup
          export AWS_REGION=${{ env.AWS_REGION }}
          export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
          tests/e2e-kubernetes/scripts/run.sh
      - name: Delete cluster
        if: always()
        run: |
          export ACTION=delete_cluster
          export AWS_REGION=${{ env.AWS_REGION }}
          export CLUSTER_NAME=${{ env.CLUSTER_NAME }}
          tests/e2e-kubernetes/scripts/run.sh
