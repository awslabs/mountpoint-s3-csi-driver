name: Manual cluster cleanup

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Github Environment"

concurrency:
  group: e2e-cluster-${{ inputs.environment }}

env:
  IMAGE_NAME: "s3-csi-driver"
  BENCHMARK_ARTIFACTS_FOLDER: ".github/artifacts"
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
jobs:
  build_matrix:
    name: Build Matrix
    uses: ./.github/workflows/build_matrix.yaml
  delete_cluster:
    needs: ["build_matrix"]
    strategy:
      # Failing fast causes some resources created during the test to leak,
      # so we disable it to ensure all resources created during test are properly cleaned up.
      fail-fast: false
      matrix: ${{ fromJson(needs.build_matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: "${{ vars.AWS_REGION }}"
      CLUSTER_TYPE: "${{ matrix.cluster-type }}"
      ARCH: "${{ matrix.arch }}"
      AMI_FAMILY: "${{ matrix.family }}"
      # envtest doesn't support all versions, here K8S_VERSION is a full version like 1.28.13,
      # and in order to get latest supported version by envtest we convert it to 1.28.
      K8S_VERSION: "${{ matrix.kubernetes-version }}"
      ENVTEST_K8S_VERSION: "${K8S_VERSION%.*}"
      SELINUX_MODE: "${{ matrix.selinux-mode }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 7200
      - name: Install tools
        env:
          ACTION: "install_tools"
        run: |
          tests/e2e-kubernetes/scripts/run.sh
      - name: Delete cluster
        env:
          ACTION: "delete_cluster"
          FORCE: "true"
        run: |
          tests/e2e-kubernetes/scripts/run.sh
