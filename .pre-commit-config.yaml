repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0  # Latest stable version
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-yaml
        args: [--allow-multiple-documents, --unsafe]
        # Exclude Helm charts templates
        exclude: ^charts/.*/templates/.*\.yaml$
      - id: end-of-file-fixer

  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1  # Latest stable version as of January 2025
    hooks:
      - id: codespell

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: [--config, .markdownlint.yaml, --fix]
        types: [markdown]

  - repo: https://github.com/lycheeverse/lychee
    rev: lychee-v0.18.1  # Latest stable version
    hooks:
      - id: lychee
        args: [--config, .lychee.toml]

  - repo: local
    hooks:
      # golangci-lint with Linux build environment to match CI
      # Uses .golangci.yaml configuration automatically
      # GOOS=linux ensures we analyze the same files as CI (including Linux-specific files)
      # like pkg/system/pts_test.go (which has //go:build linux constraint)
      #
      # To install golangci-lint locally (required for this hook):
      # curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.1.6
      # Or on macOS: brew install golangci-lint
      # Or with Go: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v2.1.6
      - id: golangci-lint
        name: golangci-lint
        entry: bash -c 'GOOS=linux golangci-lint run --config .golangci.yaml'
        language: system
        files: \.go$
        pass_filenames: false

      # Go formatting tools (gofmt, goimports, gofumpt)
      # These run before linting to ensure code is properly formatted
      #
      # To install formatting tools:
      # go install golang.org/x/tools/cmd/goimports@latest
      # go install mvdan.cc/gofumpt@latest
      # gofmt comes with Go by default
      - id: go-fmt-imports-fumpt
        name: go formatting (gofmt, goimports, gofumpt)
        entry: |
          bash -c '
          echo "🔧 Running Go formatters...";
          if [ -n "$(gofmt -l .)" ]; then
            echo "❌ gofmt issues found:";
            gofmt -l .;
            echo "Run: gofmt -w .";
            exit 1;
          fi;
          if [ -n "$(goimports -l .)" ]; then
            echo "❌ goimports issues found:";
            goimports -l .;
            echo "Run: goimports -w .";
            exit 1;
          fi;
          if [ -n "$(gofumpt -l .)" ]; then
            echo "❌ gofumpt issues found:";
            gofumpt -l .;
            echo "Run: gofumpt -w .";
            exit 1;
          fi;
          echo "✅ All Go formatting checks passed!";
          '
        language: system
        files: \.go$
        pass_filenames: false

      - id: helm-lint
        name: helm lint
        entry: helm lint charts/scality-mountpoint-s3-csi-driver
        language: system
        files: ^charts/
        pass_filenames: false
      - id: mkdocs-build
        name: mkdocs build
        entry: bash -c 'source .venv/bin/activate 2>/dev/null || true; mkdocs build --strict'
        language: system
        files: ^(mkdocs\.yml|docs/.*)$
        pass_filenames: false
