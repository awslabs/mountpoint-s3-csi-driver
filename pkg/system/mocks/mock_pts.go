// Code generated by MockGen. DO NOT EDIT.
// Source: pts.go

// Package mock_system is a generated GoMock package.
package mock_system

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPts is a mock of Pts interface.
type MockPts struct {
	ctrl     *gomock.Controller
	recorder *MockPtsMockRecorder
}

// MockPtsMockRecorder is the mock recorder for MockPts.
type MockPtsMockRecorder struct {
	mock *MockPts
}

// NewMockPts creates a new mock instance.
func NewMockPts(ctrl *gomock.Controller) *MockPts {
	mock := &MockPts{ctrl: ctrl}
	mock.recorder = &MockPtsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPts) EXPECT() *MockPtsMockRecorder {
	return m.recorder
}

// NewPts mocks base method.
func (m *MockPts) NewPts() (io.ReadCloser, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewPts")
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// NewPts indicates an expected call of NewPts.
func (mr *MockPtsMockRecorder) NewPts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewPts", reflect.TypeOf((*MockPts)(nil).NewPts))
}
