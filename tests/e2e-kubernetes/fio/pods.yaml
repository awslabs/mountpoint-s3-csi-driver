apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-pv
spec:
  mountOptions:
    - allow-delete
  capacity:
    storage: 1200Gi # ignored, required
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  csi:
    driver: s3.csi.aws.com # required
    volumeHandle: s3-csi-driver-volume
    volumeAttributes:
      bucketName: s3-csi-perf-test-vlaad
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-claim
spec:
  accessModes:
    - ReadWriteMany # supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "" # required for static provisioning
  resources:
    requests:
      storage: 1200Gi # ignored, required
  volumeName: s3-pv
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-app-1
spec:
  nodeSelector:
    kubernetes.io/hostname: i-0aaccf6c10dc54921
  containers:
    - name: app
      image: ubuntu:22.04
      command: ["/bin/sh"]
      args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: s3-claim
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-app-2
spec:
  nodeSelector:
    kubernetes.io/hostname: i-0aaccf6c10dc54921
  containers:
    - name: app
      image: ubuntu:22.04
      command: ["/bin/sh"]
      args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: s3-claim
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-app-3
spec:
  nodeSelector:
    kubernetes.io/hostname: i-0aaccf6c10dc54921
  containers:
    - name: app
      image: ubuntu:22.04
      command: ["/bin/sh"]
      args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: s3-claim
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-app-4
spec:
  nodeSelector:
    kubernetes.io/hostname: i-0aaccf6c10dc54921
  containers:
    - name: app
      image: ubuntu:22.04
      command: ["/bin/sh"]
      args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: s3-claim
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-app-5
spec:
  nodeSelector:
    kubernetes.io/hostname: i-0aaccf6c10dc54921
  containers:
    - name: app
      image: ubuntu:22.04
      command: ["/bin/sh"]
      args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
      volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumes:
    - name: persistent-storage
      persistentVolumeClaim:
        claimName: s3-claim