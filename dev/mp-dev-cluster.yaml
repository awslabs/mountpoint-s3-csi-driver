apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: mp-dev-cluster
  region: eu-north-1
  version: "1.33"

iam:
  # To use IRSA, see https://github.com/awslabs/mountpoint-s3-csi-driver/blob/main/docs/CONFIGURATION.md#driver-level-credentials-with-irsa
  withOIDC: true

  # Enable it if you want to use EKS Pod Identity instead of instance profile.
  # Note: Without instance profile, the end-to-end tests might fail.
  # podIdentityAssociations:
  #   - namespace: kube-system
  #     serviceAccountName: s3-csi-driver-sa
  #     permissionPolicyARNs:
  #       - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
  #     permissionPolicy:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Action:
  #             - "s3express:*"
  #           Resource: "*"

# See https://eksctl.io/usage/nodegroup-managed/
managedNodeGroups:
  - name: ng-1
    instanceType: c5a.xlarge
    desiredCapacity: 1
    amiFamily: AmazonLinux2023
    iam:
      attachPolicyARNs:
        # These are required for node to function,
        # see https://eksctl.io/usage/iam-policies/#attaching-policies-by-arn
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPullOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        # These are for end-to-end tests:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      attachPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3express:*"
            Resource: "*"
    ssh:
      allow: true # Will use ~/.ssh/id_rsa.pub as the default ssh key
      # publicKeyPath: ~/.ssh/id_ed25519.pub # or you can also configure a custom key

# You can also create self-managed node-groups,
# See https://eksctl.io/usage/nodegroup-unmanaged/
# nodeGroups:
#   - name: ng-1
#     instanceType: c5a.xlarge
#     desiredCapacity: 1
#     amiFamily: AmazonLinux2023

# Enable if you want to also install Karpenter, see https://eksctl.io/usage/eksctl-karpenter/
# karpenter:
#   version: "1.6.0"

addons:
  # To use EKS Pod Identity, see https://github.com/awslabs/mountpoint-s3-csi-driver/blob/main/docs/CONFIGURATION.md#driver-level-credentials-with-eks-pod-identity
  - name: eks-pod-identity-agent

  # To get metrics and logs to CloudWatch
  - name: amazon-cloudwatch-observability
    podIdentityAssociations:
      - serviceAccountName: cloudwatch-agent
        namespace: amazon-cloudwatch
        permissionPolicyARNs:
          - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"

  # Enable if you want to test "ephemeral" cache type, see https://github.com/awslabs/mountpoint-s3-csi-driver/blob/main/docs/CACHING.md#using-ebs-csi-driver-to-provision-an-ebs-volume-dynamically
  # - name: aws-ebs-csi-driver
